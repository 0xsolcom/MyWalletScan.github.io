import type { SliderSingleProps } from 'antd';
import type { SliderBaseProps, SliderRangeProps } from 'antd/lib/slider';
import React from 'react';
import type { ProFormFieldItemProps } from '../../typing';
export declare type ProFormSliderProps = ProFormFieldItemProps<SliderSingleProps | SliderRangeProps, unknown> & {
    range?: boolean;
    min?: SliderBaseProps['min'];
    max?: SliderBaseProps['max'];
    step?: SliderBaseProps['step'];
    marks?: SliderBaseProps['marks'];
    vertical?: SliderBaseProps['vertical'];
};
/**
 * 文本选择组件
 *
 * @param
 */
declare const ProFormSlider: React.ForwardRefExoticComponent<{
    fieldProps?: (import("../../typing").FieldProps<unknown> & (SliderSingleProps | SliderRangeProps)) | undefined;
    placeholder?: string | string[] | undefined;
    secondary?: boolean | undefined;
    cacheForSwr?: boolean | undefined;
    disabled?: boolean | undefined;
    width?: number | "sm" | "md" | "xl" | "xs" | "lg" | undefined;
    proFieldProps?: import("packages/utils/es").ProFieldProps | undefined;
    footerRender?: import("../../typing").LightFilterFooterRender | undefined;
    children?: React.ReactNode;
} & Omit<import("..").ProFormItemProps, "valueType"> & Pick<import("../../typing").ProFormGridConfig, "colProps"> & import("../../typing").ExtendsProps & {
    range?: boolean | undefined;
    min?: SliderBaseProps['min'];
    max?: SliderBaseProps['max'];
    step?: SliderBaseProps['step'];
    marks?: SliderBaseProps['marks'];
    vertical?: SliderBaseProps['vertical'];
} & React.RefAttributes<any>>;
export default ProFormSlider;
