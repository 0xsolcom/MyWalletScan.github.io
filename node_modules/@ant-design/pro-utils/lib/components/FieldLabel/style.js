"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useStyle = useStyle;
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
var _proProvider = require("@ant-design/pro-provider");
var genProStyle = function genProStyle(token) {
  var _$concat$concat, _icon, _small, _token$componentCls;
  return (0, _defineProperty2.default)({}, token.componentCls, (_token$componentCls = {
    display: 'inline-flex',
    gap: token.marginXXS,
    alignItems: 'center',
    height: '30px',
    paddingBlock: 0,
    paddingInline: 8,
    fontSize: token.fontSize,
    lineHeight: '30px',
    borderRadius: '2px',
    cursor: 'pointer',
    '&:hover': {
      backgroundColor: token.colorBgTextHover
    },
    '&-active': (0, _defineProperty2.default)({
      paddingBlock: 0,
      paddingInline: 8,
      backgroundColor: token.colorBgTextHover
    }, "&".concat(token.componentCls, "-allow-clear:hover:not(").concat(token.componentCls, "-disabled)"), (_$concat$concat = {}, (0, _defineProperty2.default)(_$concat$concat, "".concat(token.componentCls, "-arrow"), {
      display: 'none'
    }), (0, _defineProperty2.default)(_$concat$concat, "".concat(token.componentCls, "-close"), {
      display: 'inline-flex'
    }), _$concat$concat))
  }, (0, _defineProperty2.default)(_token$componentCls, "".concat(token.antCls, "-select"), (0, _defineProperty2.default)({}, "".concat(token.antCls, "-select-clear"), {
    borderRadius: '50%'
  })), (0, _defineProperty2.default)(_token$componentCls, "".concat(token.antCls, "-picker"), (0, _defineProperty2.default)({}, "".concat(token.antCls, "-picker-clear"), {
    borderRadius: '50%'
  })), (0, _defineProperty2.default)(_token$componentCls, '&-icon', (_icon = {
    color: token.colorIcon,
    transition: 'color 0.3s',
    fontSize: 12,
    verticalAlign: 'middle'
  }, (0, _defineProperty2.default)(_icon, "&".concat(token.componentCls, "-close"), {
    display: 'none',
    fontSize: 12,
    alignItems: 'center',
    justifyContent: 'center',
    color: token.colorTextPlaceholder,
    borderRadius: '50%'
  }), (0, _defineProperty2.default)(_icon, '&:hover', {
    color: token.colorIconHover
  }), _icon)), (0, _defineProperty2.default)(_token$componentCls, '&-disabled', (0, _defineProperty2.default)({
    color: token.colorTextPlaceholder,
    cursor: 'not-allowed'
  }, "".concat(token.componentCls, "-icon"), {
    color: token.colorTextPlaceholder
  })), (0, _defineProperty2.default)(_token$componentCls, '&-small', (_small = {
    height: '24px',
    paddingBlock: 0,
    paddingInline: 4,
    fontSize: token.fontSizeSM,
    lineHeight: '24px'
  }, (0, _defineProperty2.default)(_small, "&".concat(token.componentCls, "-active"), {
    paddingBlock: 0,
    paddingInline: 8
  }), (0, _defineProperty2.default)(_small, "".concat(token.componentCls, "-icon"), {
    paddingBlock: 0,
    paddingInline: 0
  }), (0, _defineProperty2.default)(_small, "".concat(token.componentCls, "-close"), {
    marginBlockStart: '-2px',
    paddingBlock: 4,
    paddingInline: 4,
    fontSize: '6px'
  }), _small)), (0, _defineProperty2.default)(_token$componentCls, '&-bordered', {
    height: '32px',
    paddingBlock: 0,
    paddingInline: 8,
    border: "".concat(token.lineWidth, "px solid ").concat(token.colorBorder),
    borderRadius: '@border-radius-base'
  }), (0, _defineProperty2.default)(_token$componentCls, '&-bordered&-small', {
    height: '24px',
    paddingBlock: 0,
    paddingInline: 8
  }), (0, _defineProperty2.default)(_token$componentCls, '&-bordered&-active', {
    backgroundColor: token.colorBgContainer
  }), _token$componentCls));
};
function useStyle(prefixCls) {
  return (0, _proProvider.useStyle)('FieldLabel', function (token) {
    var proToken = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, token), {}, {
      componentCls: ".".concat(prefixCls)
    });
    return [genProStyle(proToken)];
  });
}