"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.zhTWIntl = exports.zhCNIntl = exports.viVNIntl = exports.trTRIntl = exports.thTHIntl = exports.srRSIntl = exports.skSKIntl = exports.ruRUIntl = exports.ptBRIntl = exports.plPLIntl = exports.msMYIntl = exports.mnMNIntl = exports.koKRIntl = exports.jaJPIntl = exports.itITIntl = exports.intlMapKeys = exports.intlMap = exports.idIDIntl = exports.hrHRIntl = exports.heILIntl = exports.frFRIntl = exports.findIntlKeyByAntdLocaleKey = exports.faIRIntl = exports.esESIntl = exports.enUSIntl = exports.enGBIntl = exports.deDEIntl = exports.csCZIntl = exports.createIntl = exports.caESIntl = exports.arEGIntl = void 0;
var _createForOfIteratorHelper2 = _interopRequireDefault(require("@babel/runtime/helpers/createForOfIteratorHelper"));
var _ar_EG = _interopRequireDefault(require("./locale/ar_EG"));
var _ca_ES = _interopRequireDefault(require("./locale/ca_ES"));
var _cs_CZ = _interopRequireDefault(require("./locale/cs_CZ"));
var _de_DE = _interopRequireDefault(require("./locale/de_DE"));
var _en_GB = _interopRequireDefault(require("./locale/en_GB"));
var _en_US = _interopRequireDefault(require("./locale/en_US"));
var _es_ES = _interopRequireDefault(require("./locale/es_ES"));
var _fa_IR = _interopRequireDefault(require("./locale/fa_IR"));
var _fr_FR = _interopRequireDefault(require("./locale/fr_FR"));
var _he_IL = _interopRequireDefault(require("./locale/he_IL"));
var _hr_HR = _interopRequireDefault(require("./locale/hr_HR"));
var _id_ID = _interopRequireDefault(require("./locale/id_ID"));
var _it_IT = _interopRequireDefault(require("./locale/it_IT"));
var _ja_JP = _interopRequireDefault(require("./locale/ja_JP"));
var _ko_KR = _interopRequireDefault(require("./locale/ko_KR"));
var _mn_MN = _interopRequireDefault(require("./locale/mn_MN"));
var _ms_MY = _interopRequireDefault(require("./locale/ms_MY"));
var _pl_PL = _interopRequireDefault(require("./locale/pl_PL"));
var _pt_BR = _interopRequireDefault(require("./locale/pt_BR"));
var _ru_RU = _interopRequireDefault(require("./locale/ru_RU"));
var _sk_SK = _interopRequireDefault(require("./locale/sk_SK"));
var _sr_RS = _interopRequireDefault(require("./locale/sr_RS"));
var _th_TH = _interopRequireDefault(require("./locale/th_TH"));
var _tr_TR = _interopRequireDefault(require("./locale/tr_TR"));
var _vi_VN = _interopRequireDefault(require("./locale/vi_VN"));
var _zh_CN = _interopRequireDefault(require("./locale/zh_CN"));
var _zh_TW = _interopRequireDefault(require("./locale/zh_TW"));
/**
 * 安全的从一个对象中读取相应的值
 * @param source
 * @param path
 * @param defaultValue
 * @returns
 */
function get(source, path, defaultValue) {
  // a[3].b -> a.3.b
  var paths = path.replace(/\[(\d+)\]/g, '.$1').split('.');
  var result = source;
  var message = defaultValue;
  // eslint-disable-next-line no-restricted-syntax
  var _iterator = (0, _createForOfIteratorHelper2.default)(paths),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var p = _step.value;
      message = Object(result)[p];
      result = Object(result)[p];
      if (message === undefined) {
        return defaultValue;
      }
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  return message;
}
/**
 * 创建一个国际化的操作函数
 *
 * @param locale
 * @param localeMap
 */
var createIntl = function createIntl(locale, localeMap) {
  return {
    getMessage: function getMessage(id, defaultMessage) {
      return get(localeMap, id, defaultMessage) || defaultMessage;
    },
    locale: locale
  };
};
exports.createIntl = createIntl;
var mnMNIntl = createIntl('mn_MN', _mn_MN.default);
exports.mnMNIntl = mnMNIntl;
var arEGIntl = createIntl('ar_EG', _ar_EG.default);
exports.arEGIntl = arEGIntl;
var zhCNIntl = createIntl('zh_CN', _zh_CN.default);
exports.zhCNIntl = zhCNIntl;
var enUSIntl = createIntl('en_US', _en_US.default);
exports.enUSIntl = enUSIntl;
var enGBIntl = createIntl('en_GB', _en_GB.default);
exports.enGBIntl = enGBIntl;
var viVNIntl = createIntl('vi_VN', _vi_VN.default);
exports.viVNIntl = viVNIntl;
var itITIntl = createIntl('it_IT', _it_IT.default);
exports.itITIntl = itITIntl;
var jaJPIntl = createIntl('ja_JP', _ja_JP.default);
exports.jaJPIntl = jaJPIntl;
var esESIntl = createIntl('es_ES', _es_ES.default);
exports.esESIntl = esESIntl;
var caESIntl = createIntl('ca_ES', _ca_ES.default);
exports.caESIntl = caESIntl;
var ruRUIntl = createIntl('ru_RU', _ru_RU.default);
exports.ruRUIntl = ruRUIntl;
var srRSIntl = createIntl('sr_RS', _sr_RS.default);
exports.srRSIntl = srRSIntl;
var msMYIntl = createIntl('ms_MY', _ms_MY.default);
exports.msMYIntl = msMYIntl;
var zhTWIntl = createIntl('zh_TW', _zh_TW.default);
exports.zhTWIntl = zhTWIntl;
var frFRIntl = createIntl('fr_FR', _fr_FR.default);
exports.frFRIntl = frFRIntl;
var ptBRIntl = createIntl('pt_BR', _pt_BR.default);
exports.ptBRIntl = ptBRIntl;
var koKRIntl = createIntl('ko_KR', _ko_KR.default);
exports.koKRIntl = koKRIntl;
var idIDIntl = createIntl('id_ID', _id_ID.default);
exports.idIDIntl = idIDIntl;
var deDEIntl = createIntl('de_DE', _de_DE.default);
exports.deDEIntl = deDEIntl;
var faIRIntl = createIntl('fa_IR', _fa_IR.default);
exports.faIRIntl = faIRIntl;
var trTRIntl = createIntl('tr_TR', _tr_TR.default);
exports.trTRIntl = trTRIntl;
var plPLIntl = createIntl('pl_PL', _pl_PL.default);
exports.plPLIntl = plPLIntl;
var hrHRIntl = createIntl('hr_', _hr_HR.default);
exports.hrHRIntl = hrHRIntl;
var thTHIntl = createIntl('th_TH', _th_TH.default);
exports.thTHIntl = thTHIntl;
var csCZIntl = createIntl('cs_cz', _cs_CZ.default);
exports.csCZIntl = csCZIntl;
var skSKIntl = createIntl('sk_SK', _sk_SK.default);
exports.skSKIntl = skSKIntl;
var heILIntl = createIntl('he_IL', _he_IL.default);
exports.heILIntl = heILIntl;
var intlMap = {
  'mn-MN': mnMNIntl,
  'ar-EG': arEGIntl,
  'zh-CN': zhCNIntl,
  'en-US': enUSIntl,
  'en-GB': enGBIntl,
  'vi-VN': viVNIntl,
  'it-IT': itITIntl,
  'ja-JP': jaJPIntl,
  'es-ES': esESIntl,
  'ca-ES': caESIntl,
  'ru-RU': ruRUIntl,
  'sr-RS': srRSIntl,
  'ms-MY': msMYIntl,
  'zh-TW': zhTWIntl,
  'fr-FR': frFRIntl,
  'pt-BR': ptBRIntl,
  'ko-KR': koKRIntl,
  'id-ID': idIDIntl,
  'de-DE': deDEIntl,
  'fa-IR': faIRIntl,
  'tr-TR': trTRIntl,
  'pl-PL': plPLIntl,
  'hr-HR': hrHRIntl,
  'th-TH': thTHIntl,
  'cs-CZ': csCZIntl,
  'sk-SK': skSKIntl,
  'he-IL': heILIntl
};
exports.intlMap = intlMap;
var intlMapKeys = Object.keys(intlMap);

/**
 * 根据 antd 的 key 来找到的 locale 插件的 key
 *
 * @param localeKey
 */
exports.intlMapKeys = intlMapKeys;
var findIntlKeyByAntdLocaleKey = function findIntlKeyByAntdLocaleKey(localeKey) {
  var localeName = (localeKey || 'zh-CN').toLocaleLowerCase();
  return intlMapKeys.find(function (intlKey) {
    var LowerCaseKey = intlKey.toLocaleLowerCase();
    return LowerCaseKey.includes(localeName);
  });
};
exports.findIntlKeyByAntdLocaleKey = findIntlKeyByAntdLocaleKey;